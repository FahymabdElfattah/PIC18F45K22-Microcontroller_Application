

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Dec 16 11:00:55 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 06/04/2022 GMT
    23                           ; 
    24                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F45K22 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     _LATDbits	set	3980
    57   000000                     _LATAbits	set	3977
    58   000000                     _LATD	set	3980
    59   000000                     _TRISBbits	set	3987
    60   000000                     _TRISD	set	3989
    61   000000                     _ADCON1bits	set	4033
    62   000000                     _RCONbits	set	4048
    63   000000                     _INTCON3bits	set	4080
    64   000000                     _INTCON2bits	set	4081
    65   000000                     _INTCONbits	set	4082
    66                           
    67                           ; #config settings
    68                           
    69                           	psect	cinit
    70   0000F6                     __pcinit:
    71                           	callstack 0
    72   0000F6                     start_initialization:
    73                           	callstack 0
    74   0000F6                     __initialization:
    75                           	callstack 0
    76   0000F6                     end_of_initialization:
    77                           	callstack 0
    78   0000F6                     __end_of__initialization:
    79                           	callstack 0
    80   0000F6  9004               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    81   0000F8  9204               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    82   0000FA  0100               	movlb	0
    83   0000FC  EF35  F000         	goto	_main	;jump to C main() function
    84                           
    85                           	psect	cstackCOMRAM
    86   000001                     __pcstackCOMRAM:
    87                           	callstack 0
    88   000001                     ??_ISR_L:
    89                           
    90                           ; 1 bytes @ 0x0
    91   000001                     	ds	1
    92   000002                     ??_main:
    93                           
    94                           ; 1 bytes @ 0x1
    95   000002                     	ds	2
    96                           
    97 ;;
    98 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    99 ;;
   100 ;; *************** function _main *****************
   101 ;; Defined at:
   102 ;;		line 26 in file "main.c"
   103 ;; Parameters:    Size  Location     Type
   104 ;;		None
   105 ;; Auto vars:     Size  Location     Type
   106 ;;		None
   107 ;; Return value:  Size  Location     Type
   108 ;;                  1    wreg      void 
   109 ;; Registers used:
   110 ;;		wreg, status,2, cstack
   111 ;; Tracked objects:
   112 ;;		On entry : 0/0
   113 ;;		On exit  : 0/0
   114 ;;		Unchanged: 0/0
   115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   116 ;;      Params:         0       0       0       0       0       0       0
   117 ;;      Locals:         0       0       0       0       0       0       0
   118 ;;      Temps:          2       0       0       0       0       0       0
   119 ;;      Totals:         2       0       0       0       0       0       0
   120 ;;Total ram usage:        2 bytes
   121 ;; Hardware stack levels required when called: 3
   122 ;; This function calls:
   123 ;;		_init_INT0
   124 ;;		_init_INT1
   125 ;;		_init_INT2
   126 ;;		_init_interrupt
   127 ;;		_init_port
   128 ;; This function is called by:
   129 ;;		Startup code after reset
   130 ;; This function uses a non-reentrant model
   131 ;;
   132                           
   133                           	psect	text0
   134   00006A                     __ptext0:
   135                           	callstack 0
   136   00006A                     _main:
   137                           	callstack 28
   138   00006A                     
   139                           ;main.c: 27:     LATD = 0 ;
   140   00006A  EC6D  F000         	call	_init_port	;wreg free
   141                           
   142                           ;main.c: 28: 
   143   00006E  EC75  F000         	call	_init_interrupt	;wreg free
   144   000072                     
   145                           ;main.c: 29: 
   146   000072  EC8A  F000         	call	_init_INT0	;wreg free
   147   000076                     
   148                           ;main.c: 30: 
   149   000076  EC85  F000         	call	_init_INT1	;wreg free
   150   00007A                     
   151                           ;main.c: 31: 
   152   00007A  EC80  F000         	call	_init_INT2	;wreg free
   153   00007E                     l770:
   154                           
   155                           ;main.c: 33: 
   156   00007E  8889               	bsf	137,4,c	;volatile
   157   000080                     
   158                           ;main.c: 34: }
   159   000080  0E0B               	movlw	11
   160   000082  6E03               	movwf	(??_main+1)^0,c
   161   000084  0E26               	movlw	38
   162   000086  6E02               	movwf	??_main^0,c
   163   000088  0E5E               	movlw	94
   164   00008A                     u77:
   165   00008A  2EE8               	decfsz	wreg,f,c
   166   00008C  D7FE               	bra	u77
   167   00008E  2E02               	decfsz	??_main^0,f,c
   168   000090  D7FC               	bra	u77
   169   000092  2E03               	decfsz	(??_main+1)^0,f,c
   170   000094  D7FA               	bra	u77
   171   000096                     
   172                           ;main.c: 35: void init_interrupt(){
   173   000096  9889               	bcf	137,4,c	;volatile
   174   000098                     
   175                           ;main.c: 36:     ADCON1bits.PVCFG = 0b1111;
   176   000098  0E0B               	movlw	11
   177   00009A  6E03               	movwf	(??_main+1)^0,c
   178   00009C  0E26               	movlw	38
   179   00009E  6E02               	movwf	??_main^0,c
   180   0000A0  0E5E               	movlw	94
   181   0000A2                     u87:
   182   0000A2  2EE8               	decfsz	wreg,f,c
   183   0000A4  D7FE               	bra	u87
   184   0000A6  2E02               	decfsz	??_main^0,f,c
   185   0000A8  D7FC               	bra	u87
   186   0000AA  2E03               	decfsz	(??_main+1)^0,f,c
   187   0000AC  D7FA               	bra	u87
   188   0000AE  EF3F  F000         	goto	l770
   189   0000B2  EF33  F000         	goto	start
   190   0000B6                     __end_of_main:
   191                           	callstack 0
   192                           
   193 ;; *************** function _init_port *****************
   194 ;; Defined at:
   195 ;;		line 40 in file "main.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;		None
   200 ;; Return value:  Size  Location     Type
   201 ;;                  1    wreg      void 
   202 ;; Registers used:
   203 ;;		wreg, status,2
   204 ;; Tracked objects:
   205 ;;		On entry : 0/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   209 ;;      Params:         0       0       0       0       0       0       0
   210 ;;      Locals:         0       0       0       0       0       0       0
   211 ;;      Temps:          0       0       0       0       0       0       0
   212 ;;      Totals:         0       0       0       0       0       0       0
   213 ;;Total ram usage:        0 bytes
   214 ;; Hardware stack levels used: 1
   215 ;; Hardware stack levels required when called: 2
   216 ;; This function calls:
   217 ;;		Nothing
   218 ;; This function is called by:
   219 ;;		_main
   220 ;; This function uses a non-reentrant model
   221 ;;
   222                           
   223                           	psect	text1
   224   0000DA                     __ptext1:
   225                           	callstack 0
   226   0000DA                     _init_port:
   227                           	callstack 28
   228   0000DA                     
   229                           ;main.c: 41: void init_INT0(){
   230   0000DA  8093               	bsf	147,0,c	;volatile
   231                           
   232                           ;main.c: 42:     INTCONbits.INT0E = 1 ;
   233   0000DC  8293               	bsf	147,1,c	;volatile
   234                           
   235                           ;main.c: 43:     INTCONbits.INT0F = 0 ;
   236   0000DE  8493               	bsf	147,2,c	;volatile
   237   0000E0                     
   238                           ;main.c: 45: }
   239   0000E0  0E00               	movlw	0
   240   0000E2  6E95               	movwf	149,c	;volatile
   241                           
   242                           ;main.c: 46: void init_INT1(){
   243   0000E4  0E00               	movlw	0
   244   0000E6  6E8C               	movwf	140,c	;volatile
   245   0000E8  0012               	return		;funcret
   246   0000EA                     __end_of_init_port:
   247                           	callstack 0
   248                           
   249 ;; *************** function _init_interrupt *****************
   250 ;; Defined at:
   251 ;;		line 54 in file "main.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;		None
   254 ;; Auto vars:     Size  Location     Type
   255 ;;		None
   256 ;; Return value:  Size  Location     Type
   257 ;;                  1    wreg      void 
   258 ;; Registers used:
   259 ;;		wreg, status,2
   260 ;; Tracked objects:
   261 ;;		On entry : 0/0
   262 ;;		On exit  : 0/0
   263 ;;		Unchanged: 0/0
   264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   265 ;;      Params:         0       0       0       0       0       0       0
   266 ;;      Locals:         0       0       0       0       0       0       0
   267 ;;      Temps:          0       0       0       0       0       0       0
   268 ;;      Totals:         0       0       0       0       0       0       0
   269 ;;Total ram usage:        0 bytes
   270 ;; Hardware stack levels used: 1
   271 ;; Hardware stack levels required when called: 2
   272 ;; This function calls:
   273 ;;		Nothing
   274 ;; This function is called by:
   275 ;;		_main
   276 ;; This function uses a non-reentrant model
   277 ;;
   278                           
   279                           	psect	text2
   280   0000EA                     __ptext2:
   281                           	callstack 0
   282   0000EA                     _init_interrupt:
   283                           	callstack 28
   284   0000EA                     
   285                           ;main.c: 55:     INTCON3bits.INT2IF = 0 ;
   286   0000EA  0E0C               	movlw	12
   287   0000EC  12C1               	iorwf	193,f,c	;volatile
   288   0000EE                     
   289                           ;main.c: 56:     INTCON2bits.INTEDG2 = 1 ;
   290   0000EE  8ED0               	bsf	208,7,c	;volatile
   291   0000F0                     
   292                           ;main.c: 57: }
   293   0000F0  8EF2               	bsf	242,7,c	;volatile
   294   0000F2                     
   295                           ;main.c: 58: void __attribute__((picinterrupt(("high_priority"))))ISR_H(){
   296   0000F2  8CF2               	bsf	242,6,c	;volatile
   297   0000F4  0012               	return		;funcret
   298   0000F6                     __end_of_init_interrupt:
   299                           	callstack 0
   300                           
   301 ;; *************** function _init_INT2 *****************
   302 ;; Defined at:
   303 ;;		line 71 in file "main.c"
   304 ;; Parameters:    Size  Location     Type
   305 ;;		None
   306 ;; Auto vars:     Size  Location     Type
   307 ;;		None
   308 ;; Return value:  Size  Location     Type
   309 ;;                  1    wreg      void 
   310 ;; Registers used:
   311 ;;		None
   312 ;; Tracked objects:
   313 ;;		On entry : 0/0
   314 ;;		On exit  : 0/0
   315 ;;		Unchanged: 0/0
   316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   317 ;;      Params:         0       0       0       0       0       0       0
   318 ;;      Locals:         0       0       0       0       0       0       0
   319 ;;      Temps:          0       0       0       0       0       0       0
   320 ;;      Totals:         0       0       0       0       0       0       0
   321 ;;Total ram usage:        0 bytes
   322 ;; Hardware stack levels used: 1
   323 ;; Hardware stack levels required when called: 2
   324 ;; This function calls:
   325 ;;		Nothing
   326 ;; This function is called by:
   327 ;;		_main
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           	psect	text3
   332   000100                     __ptext3:
   333                           	callstack 0
   334   000100                     _init_INT2:
   335                           	callstack 28
   336   000100                     
   337                           ;main.c: 72:     }
   338   000100  9EF0               	bcf	240,7,c	;volatile
   339                           
   340                           ;main.c: 73: }
   341   000102  88F0               	bsf	240,4,c	;volatile
   342   000104  92F0               	bcf	240,1,c	;volatile
   343   000106  88F1               	bsf	241,4,c	;volatile
   344   000108  0012               	return		;funcret
   345   00010A                     __end_of_init_INT2:
   346                           	callstack 0
   347                           
   348 ;; *************** function _init_INT1 *****************
   349 ;; Defined at:
   350 ;;		line 65 in file "main.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		None
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   364 ;;      Params:         0       0       0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels used: 1
   370 ;; Hardware stack levels required when called: 2
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text4
   379   00010A                     __ptext4:
   380                           	callstack 0
   381   00010A                     _init_INT1:
   382                           	callstack 28
   383   00010A                     
   384                           ;main.c: 66:         LATDbits.LATD1 = 1 ;
   385   00010A  9CF0               	bcf	240,6,c	;volatile
   386                           
   387                           ;main.c: 67:         INTCON3bits.INT1IF = 0 ;
   388   00010C  86F0               	bsf	240,3,c	;volatile
   389                           
   390                           ;main.c: 68:     }
   391   00010E  90F0               	bcf	240,0,c	;volatile
   392                           
   393                           ;main.c: 69:      if(INTCON3bits.INT2E == 1 && INTCON3bits.INT2IF == 1){
   394   000110  8AF1               	bsf	241,5,c	;volatile
   395   000112  0012               	return		;funcret
   396   000114                     __end_of_init_INT1:
   397                           	callstack 0
   398                           
   399 ;; *************** function _init_INT0 *****************
   400 ;; Defined at:
   401 ;;		line 60 in file "main.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		None
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   415 ;;      Params:         0       0       0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0       0       0
   417 ;;      Temps:          0       0       0       0       0       0       0
   418 ;;      Totals:         0       0       0       0       0       0       0
   419 ;;Total ram usage:        0 bytes
   420 ;; Hardware stack levels used: 1
   421 ;; Hardware stack levels required when called: 2
   422 ;; This function calls:
   423 ;;		Nothing
   424 ;; This function is called by:
   425 ;;		_main
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text5
   430   000114                     __ptext5:
   431                           	callstack 0
   432   000114                     _init_INT0:
   433                           	callstack 28
   434   000114                     
   435                           ;main.c: 61:         INTCONbits.INT0F = 0 ;
   436   000114  88F2               	bsf	242,4,c	;volatile
   437                           
   438                           ;main.c: 62:     }
   439   000116  92F2               	bcf	242,1,c	;volatile
   440                           
   441                           ;main.c: 63: }
   442   000118  8CF1               	bsf	241,6,c	;volatile
   443   00011A  0012               	return		;funcret
   444   00011C                     __end_of_init_INT0:
   445                           	callstack 0
   446                           
   447 ;; *************** function _ISR_L *****************
   448 ;; Defined at:
   449 ;;		line 83 in file "main.c"
   450 ;; Parameters:    Size  Location     Type
   451 ;;		None
   452 ;; Auto vars:     Size  Location     Type
   453 ;;		None
   454 ;; Return value:  Size  Location     Type
   455 ;;                  1    wreg      void 
   456 ;; Registers used:
   457 ;;		None
   458 ;; Tracked objects:
   459 ;;		On entry : 0/0
   460 ;;		On exit  : 0/0
   461 ;;		Unchanged: 0/0
   462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   463 ;;      Params:         0       0       0       0       0       0       0
   464 ;;      Locals:         0       0       0       0       0       0       0
   465 ;;      Temps:          1       0       0       0       0       0       0
   466 ;;      Totals:         1       0       0       0       0       0       0
   467 ;;Total ram usage:        1 bytes
   468 ;; Hardware stack levels used: 1
   469 ;; Hardware stack levels required when called: 1
   470 ;; This function calls:
   471 ;;		Nothing
   472 ;; This function is called by:
   473 ;;		Interrupt level 1
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	intcodelo
   478   000018                     __pintcodelo:
   479                           	callstack 0
   480   000018                     _ISR_L:
   481                           	callstack 28
   482                           
   483                           ;incstack = 0
   484   000018  8004               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
   485   00001A  CFE0 F001          	movff	bsr,??_ISR_L
   486   00001E  A6F0               	btfss	240,3,c	;volatile
   487   000020  EF14  F000         	goto	i1u3_21
   488   000024  EF16  F000         	goto	i1u3_20
   489   000028                     i1u3_21:
   490   000028  EF1F  F000         	goto	i1l66
   491   00002C                     i1u3_20:
   492   00002C  A0F0               	btfss	240,0,c	;volatile
   493   00002E  EF1B  F000         	goto	i1u4_21
   494   000032  EF1D  F000         	goto	i1u4_20
   495   000036                     i1u4_21:
   496   000036  EF1F  F000         	goto	i1l66
   497   00003A                     i1u4_20:
   498   00003A  828C               	bsf	140,1,c	;volatile
   499   00003C  90F0               	bcf	240,0,c	;volatile
   500   00003E                     i1l66:
   501   00003E  A8F0               	btfss	240,4,c	;volatile
   502   000040  EF24  F000         	goto	i1u5_21
   503   000044  EF26  F000         	goto	i1u5_20
   504   000048                     i1u5_21:
   505   000048  EF2F  F000         	goto	i1l68
   506   00004C                     i1u5_20:
   507   00004C  A2F0               	btfss	240,1,c	;volatile
   508   00004E  EF2B  F000         	goto	i1u6_21
   509   000052  EF2D  F000         	goto	i1u6_20
   510   000056                     i1u6_21:
   511   000056  EF2F  F000         	goto	i1l68
   512   00005A                     i1u6_20:
   513   00005A  848C               	bsf	140,2,c	;volatile
   514   00005C  92F0               	bcf	240,1,c	;volatile
   515   00005E                     i1l68:
   516   00005E  C001  FFE0         	movff	??_ISR_L,bsr
   517   000062  9004               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   518   000064  0010               	retfie	
   519   000066                     __end_of_ISR_L:
   520                           	callstack 0
   521                           
   522 ;; *************** function _ISR_H *****************
   523 ;; Defined at:
   524 ;;		line 77 in file "main.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		None
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   538 ;;      Params:         0       0       0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0       0       0
   541 ;;      Totals:         0       0       0       0       0       0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; This function calls:
   545 ;;		Nothing
   546 ;; This function is called by:
   547 ;;		Interrupt level 2
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	intcode
   552   000008                     __pintcode:
   553                           	callstack 0
   554   000008                     _ISR_H:
   555                           	callstack 28
   556                           
   557                           ;incstack = 0
   558   000008  8204               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   559   00000A  EF5B  F000         	goto	int_func
   560                           
   561                           	psect	intcode_body
   562   0000B6                     __pintcode_body:
   563                           	callstack 28
   564   0000B6                     int_func:
   565                           	callstack 28
   566   0000B6  A8F2               	btfss	242,4,c	;volatile
   567   0000B8  EF60  F000         	goto	i2u1_41
   568   0000BC  EF62  F000         	goto	i2u1_40
   569   0000C0                     i2u1_41:
   570   0000C0  EF6B  F000         	goto	i2l61
   571   0000C4                     i2u1_40:
   572   0000C4  A2F2               	btfss	242,1,c	;volatile
   573   0000C6  EF67  F000         	goto	i2u2_41
   574   0000CA  EF69  F000         	goto	i2u2_40
   575   0000CE                     i2u2_41:
   576   0000CE  EF6B  F000         	goto	i2l61
   577   0000D2                     i2u2_40:
   578   0000D2  808C               	bsf	140,0,c	;volatile
   579   0000D4  92F2               	bcf	242,1,c	;volatile
   580   0000D6                     i2l61:
   581   0000D6  9204               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   582   0000D8  0011               	retfie		f
   583   0000DA                     __end_of_ISR_H:
   584                           	callstack 0
   585   000000                     
   586                           	psect	rparam
   587   000000                     
   588                           	psect	temp
   589   000004                     btemp:
   590                           	callstack 0
   591   000004                     	ds	1
   592   000000                     int$flags	set	btemp
   593   000000                     wtemp8	set	btemp+1
   594   000000                     ttemp5	set	btemp+1
   595   000000                     ttemp6	set	btemp+4
   596   000000                     ttemp7	set	btemp+8
   597                           
   598                           	psect	idloc
   599                           
   600                           ;Config register IDLOC0 @ 0x200000
   601                           ;	unspecified, using default values
   602   200000                     	org	2097152
   603   200000  FF                 	db	255
   604                           
   605                           ;Config register IDLOC1 @ 0x200001
   606                           ;	unspecified, using default values
   607   200001                     	org	2097153
   608   200001  FF                 	db	255
   609                           
   610                           ;Config register IDLOC2 @ 0x200002
   611                           ;	unspecified, using default values
   612   200002                     	org	2097154
   613   200002  FF                 	db	255
   614                           
   615                           ;Config register IDLOC3 @ 0x200003
   616                           ;	unspecified, using default values
   617   200003                     	org	2097155
   618   200003  FF                 	db	255
   619                           
   620                           ;Config register IDLOC4 @ 0x200004
   621                           ;	unspecified, using default values
   622   200004                     	org	2097156
   623   200004  FF                 	db	255
   624                           
   625                           ;Config register IDLOC5 @ 0x200005
   626                           ;	unspecified, using default values
   627   200005                     	org	2097157
   628   200005  FF                 	db	255
   629                           
   630                           ;Config register IDLOC6 @ 0x200006
   631                           ;	unspecified, using default values
   632   200006                     	org	2097158
   633   200006  FF                 	db	255
   634                           
   635                           ;Config register IDLOC7 @ 0x200007
   636                           ;	unspecified, using default values
   637   200007                     	org	2097159
   638   200007  FF                 	db	255
   639                           
   640                           	psect	config
   641                           
   642                           ; Padding undefined space
   643   300000                     	org	3145728
   644   300000  FF                 	db	255
   645                           
   646                           ;Config register CONFIG1H @ 0x300001
   647                           ;	Oscillator Selection bits
   648                           ;	FOSC = HSMP, HS oscillator (medium power 4-16 MHz)
   649                           ;	4X PLL Enable
   650                           ;	PLLCFG = OFF, Oscillator used directly
   651                           ;	Primary clock enable bit
   652                           ;	PRICLKEN = ON, Primary clock is always enabled
   653                           ;	Fail-Safe Clock Monitor Enable bit
   654                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   655                           ;	Internal/External Oscillator Switchover bit
   656                           ;	IESO = OFF, Oscillator Switchover mode disabled
   657   300001                     	org	3145729
   658   300001  23                 	db	35
   659                           
   660                           ;Config register CONFIG2L @ 0x300002
   661                           ;	Power-up Timer Enable bit
   662                           ;	PWRTEN = OFF, Power up timer disabled
   663                           ;	Brown-out Reset Enable bits
   664                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   665                           ;	Brown Out Reset Voltage bits
   666                           ;	BORV = 190, VBOR set to 1.90 V nominal
   667   300002                     	org	3145730
   668   300002  1F                 	db	31
   669                           
   670                           ;Config register CONFIG2H @ 0x300003
   671                           ;	Watchdog Timer Enable bits
   672                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
   673                           ;	Watchdog Timer Postscale Select bits
   674                           ;	WDTPS = 32768, 1:32768
   675   300003                     	org	3145731
   676   300003  3C                 	db	60
   677                           
   678                           ; Padding undefined space
   679   300004                     	org	3145732
   680   300004  FF                 	db	255
   681                           
   682                           ;Config register CONFIG3H @ 0x300005
   683                           ;	CCP2 MUX bit
   684                           ;	CCP2MX = PORTB3, CCP2 input/output is multiplexed with RB3
   685                           ;	PORTB A/D Enable bit
   686                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
   687                           ;	P3A/CCP3 Mux bit
   688                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
   689                           ;	HFINTOSC Fast Start-up
   690                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
   691                           ;	Timer3 Clock input mux bit
   692                           ;	T3CMX = PORTC0, T3CKI is on RC0
   693                           ;	ECCP2 B output mux bit
   694                           ;	P2BMX = PORTD2, P2B is on RD2
   695                           ;	MCLR Pin Enable bit
   696                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
   697   300005                     	org	3145733
   698   300005  BC                 	db	188
   699                           
   700                           ;Config register CONFIG4L @ 0x300006
   701                           ;	Stack Full/Underflow Reset Enable bit
   702                           ;	STVREN = ON, Stack full/underflow will cause Reset
   703                           ;	Single-Supply ICSP Enable bit
   704                           ;	LVP = OFF, Single-Supply ICSP disabled
   705                           ;	Extended Instruction Set Enable bit
   706                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   707                           ;	Background Debug
   708                           ;	DEBUG = OFF, Disabled
   709   300006                     	org	3145734
   710   300006  81                 	db	129
   711                           
   712                           ; Padding undefined space
   713   300007                     	org	3145735
   714   300007  FF                 	db	255
   715                           
   716                           ;Config register CONFIG5L @ 0x300008
   717                           ;	Code Protection Block 0
   718                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   719                           ;	Code Protection Block 1
   720                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   721                           ;	Code Protection Block 2
   722                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   723                           ;	Code Protection Block 3
   724                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   725   300008                     	org	3145736
   726   300008  0F                 	db	15
   727                           
   728                           ;Config register CONFIG5H @ 0x300009
   729                           ;	Boot Block Code Protection bit
   730                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   731                           ;	Data EEPROM Code Protection bit
   732                           ;	CPD = OFF, Data EEPROM not code-protected
   733   300009                     	org	3145737
   734   300009  C0                 	db	192
   735                           
   736                           ;Config register CONFIG6L @ 0x30000A
   737                           ;	Write Protection Block 0
   738                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   739                           ;	Write Protection Block 1
   740                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   741                           ;	Write Protection Block 2
   742                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   743                           ;	Write Protection Block 3
   744                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   745   30000A                     	org	3145738
   746   30000A  0F                 	db	15
   747                           
   748                           ;Config register CONFIG6H @ 0x30000B
   749                           ;	Configuration Register Write Protection bit
   750                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   751                           ;	Boot Block Write Protection bit
   752                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   753                           ;	Data EEPROM Write Protection bit
   754                           ;	WRTD = OFF, Data EEPROM not write-protected
   755   30000B                     	org	3145739
   756   30000B  E0                 	db	224
   757                           
   758                           ;Config register CONFIG7L @ 0x30000C
   759                           ;	Table Read Protection Block 0
   760                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   761                           ;	Table Read Protection Block 1
   762                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   763                           ;	Table Read Protection Block 2
   764                           ;	EBTR2 = 0x1, unprogrammed default
   765                           ;	Table Read Protection Block 3
   766                           ;	EBTR3 = 0x1, unprogrammed default
   767   30000C                     	org	3145740
   768   30000C  0F                 	db	15
   769                           
   770                           ;Config register CONFIG7H @ 0x30000D
   771                           ;	Boot Block Table Read Protection bit
   772                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   773   30000D                     	org	3145741
   774   30000D  40                 	db	64
   775                           tosu	equ	0xFFF
   776                           tosh	equ	0xFFE
   777                           tosl	equ	0xFFD
   778                           stkptr	equ	0xFFC
   779                           pclatu	equ	0xFFB
   780                           pclath	equ	0xFFA
   781                           pcl	equ	0xFF9
   782                           tblptru	equ	0xFF8
   783                           tblptrh	equ	0xFF7
   784                           tblptrl	equ	0xFF6
   785                           tablat	equ	0xFF5
   786                           prodh	equ	0xFF4
   787                           prodl	equ	0xFF3
   788                           indf0	equ	0xFEF
   789                           postinc0	equ	0xFEE
   790                           postdec0	equ	0xFED
   791                           preinc0	equ	0xFEC
   792                           plusw0	equ	0xFEB
   793                           fsr0h	equ	0xFEA
   794                           fsr0l	equ	0xFE9
   795                           wreg	equ	0xFE8
   796                           indf1	equ	0xFE7
   797                           postinc1	equ	0xFE6
   798                           postdec1	equ	0xFE5
   799                           preinc1	equ	0xFE4
   800                           plusw1	equ	0xFE3
   801                           fsr1h	equ	0xFE2
   802                           fsr1l	equ	0xFE1
   803                           bsr	equ	0xFE0
   804                           indf2	equ	0xFDF
   805                           postinc2	equ	0xFDE
   806                           postdec2	equ	0xFDD
   807                           preinc2	equ	0xFDC
   808                           plusw2	equ	0xFDB
   809                           fsr2h	equ	0xFDA
   810                           fsr2l	equ	0xFD9
   811                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_L in COMRAM

    None.

Critical Paths under _ISR_H in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR_L in BANK0

    None.

Critical Paths under _ISR_H in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR_L in BANK1

    None.

Critical Paths under _ISR_H in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_L in BANK2

    None.

Critical Paths under _ISR_H in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_L in BANK3

    None.

Critical Paths under _ISR_H in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_L in BANK4

    None.

Critical Paths under _ISR_H in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_L in BANK5

    None.

Critical Paths under _ISR_H in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              1 COMRAM     2     2      0
                          _init_INT0
                          _init_INT1
                          _init_INT2
                     _init_interrupt
                          _init_port
 ---------------------------------------------------------------------------------
 (1) _init_port                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_INT2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_INT1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_INT0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR_L                                                1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR_H                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_INT0
   _init_INT1
   _init_INT2
   _init_interrupt
   _init_port

 _ISR_L (ROOT)

 _ISR_H (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      3       3       1        3.2%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBIGSFRhhhhhh      D      0       0      15        0.0%
BITBIGSFRhhhhhl     1F      0       0      16        0.0%
BITBIGSFRhhhhl       E      0       0      17        0.0%
BITBIGSFRhhhl       2B      0       0      18        0.0%
BITBIGSFRhhl         1      0       0      19        0.0%
BITBIGSFRhlh         6      0       0      20        0.0%
BITBIGSFRhll         2      0       0      21        0.0%
BITBIGSFRl          51      0       0      22        0.0%
ABS                  0      0       0      23        0.0%
BIGRAM             5FF      0       0      24        0.0%
DATA                 0      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Dec 16 11:00:55 2022

       ??_init_interrupt 0002                       l43 00E8                       l52 0112  
                     l46 00F4                       l55 0108                       l49 011A  
                     u77 008A                       u87 00A2                       bsr 000FE0  
                    l750 00EE                      l760 0100                      l752 00F0  
                    l744 00DA                      l754 00F2                      l746 00E0  
                    l770 007E                      l762 006A                      l756 0114  
                    l748 00EA                      l772 0080                      l764 0072  
                    l758 010A                      l774 0096                      l766 0076  
                    l776 0098                      l768 007A                      wreg 000FE8  
                   _LATD 000F8C                     i1l66 003E                     i1l68 005E  
                   i2l61 00D6                     _main 006A                     btemp 0004  
                   start 0066             ___param_bank 000000                    ?_main 0001  
                  i1l790 004C                    i1l792 005A                    i1l784 001E  
                  i1l786 002C                    i1l788 003A                    i2l780 00C4  
                  i2l782 00D2                    i2l778 00B6                    _ISR_H 0008  
                  _ISR_L 0018                    _TRISD 000F95                    ttemp5 0005  
                  ttemp6 0008                    ttemp7 000C                    wtemp8 0005  
        __initialization 00F6             __end_of_main 00B6                   ??_main 0002  
          __activetblptr 000000                   ?_ISR_H 0001                   ?_ISR_L 0001  
                 i1u3_20 002C                   i1u3_21 0028                   i1u4_20 003A  
                 i1u4_21 0036                   i1u5_20 004C                   i1u5_21 0048  
                 i2u1_40 00C4                   i2u1_41 00C0                   i1u6_20 005A  
                 i1u6_21 0056                   i2u2_40 00D2                   i2u2_41 00CE  
                 isa$std 000001               __accesstop 0060  __end_of__initialization 00F6  
          ___rparam_used 000001            __end_of_ISR_H 00DA            __end_of_ISR_L 0066  
         __pcstackCOMRAM 0001                  ??_ISR_H 0001                  ??_ISR_L 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 00F6  
                __ramtop 0600                  __ptext0 006A                  __ptext1 00DA  
                __ptext2 00EA                  __ptext3 0100                  __ptext4 010A  
                __ptext5 0114        __end_of_init_INT0 011C        __end_of_init_INT1 0114  
      __end_of_init_INT2 010A        __end_of_init_port 00EA           __pintcode_body 00B6  
   end_of_initialization 00F6                  int_func 00B6                _TRISBbits 000F93  
    start_initialization 00F6           _init_interrupt 00EA                __pintcode 0008  
            __pintcodelo 0018   __end_of_init_interrupt 00F6                _init_INT0 0114  
              _init_INT1 010A                _init_INT2 0100                _init_port 00DA  
               _LATAbits 000F89                 _LATDbits 000F8C                 _RCONbits 000FD0  
             _ADCON1bits 000FC1          ?_init_interrupt 0001               ?_init_INT0 0001  
             ?_init_INT1 0001               ?_init_INT2 0001               ?_init_port 0001  
            _INTCON2bits 000FF1              _INTCON3bits 000FF0                 __Hrparam 0000  
               __Lrparam 0000                 isa$xinst 000000                 int$flags 0004  
             _INTCONbits 000FF2              ??_init_INT0 0002              ??_init_INT1 0002  
            ??_init_INT2 0002              ??_init_port 0002                 intlevel1 0000  
               intlevel2 0000  
